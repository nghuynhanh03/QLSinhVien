/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package student;

import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author Admin
 */
public class ManageStudent extends javax.swing.JFrame {

    PreparedStatement ps = null;
    public Connection cn;
    public Statement st;
    ResultSet rs = null;
    Nghanh n = new Nghanh();
    Khoa khoa = new Khoa();
    SinhVien sv = new SinhVien();

    public ManageStudent() {
        setTitle("HỆ THỐNG QUẢN LÝ SINH VIÊN");
        try {
            cn = MyConnection.getConnection();
            st = cn.createStatement();
            //JOptionPane.showMessageDialog(null, "Connected");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Not Connected");
        }
        initComponents();
        addKhoaToComboBox();
        addCNToComboBox();
        // Get the maximum size of the window
        GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Rectangle bounds = env.getMaximumWindowBounds();
        int maxWidth = bounds.width;
        int maxHeight = bounds.height;
        // Set the size of the frame to the maximum size of the window
        setSize(maxWidth, maxHeight);

        // Set the location of the frame to the top left corner of the window
        setLocation(bounds.x, bounds.y);

        // Call setExtendedState() to set the frame to full screen mode
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnXemKhoa = new javax.swing.JButton();
        btnXemCN = new javax.swing.JButton();
        BTN = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTenKhoa = new javax.swing.JTextField();
        btnThemKhoa = new javax.swing.JButton();
        btnSuaKhoa = new javax.swing.JButton();
        btnXoaKhoa = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTenCN = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        btnOut = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtSex = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtGPA = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();
        btnLop = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cbCN = new javax.swing.JComboBox<>();
        jSeparator5 = new javax.swing.JSeparator();
        btnLuuKhoa = new javax.swing.JButton();
        btnThemCN = new javax.swing.JButton();
        btnXoaCN = new javax.swing.JButton();
        btnSuaCN = new javax.swing.JButton();
        btnLuuCN = new javax.swing.JButton();
        txtLop = new javax.swing.JTextField();
        CbKhoa = new javax.swing.JComboBox<>();
        getDate = new com.toedter.calendar.JDateChooser();
        btnSave = new javax.swing.JButton();
        txtFind = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnUpImage = new javax.swing.JButton();
        imageFile = new javax.swing.JLabel();

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("HỆ THỐNG QUẢN LÝ SINH VIÊN");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Nhóm 14");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("CHỨC NĂNG XEM");

        btnXemKhoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXemKhoa.setText("DANH SÁCH KHOA");
        btnXemKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemKhoaActionPerformed(evt);
            }
        });

        btnXemCN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXemCN.setText("DANH SÁCH CHUYÊN NGHÀNH");
        btnXemCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemCNActionPerformed(evt);
            }
        });

        BTN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BTN.setText("DANH SÁCH SINH VIÊN");
        BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("KHOA");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Tên khoa");

        btnThemKhoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemKhoa.setText("THÊM");
        btnThemKhoa.setToolTipText("");
        btnThemKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKhoaActionPerformed(evt);
            }
        });

        btnSuaKhoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSuaKhoa.setText("SỬA");
        btnSuaKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaKhoaActionPerformed(evt);
            }
        });

        btnXoaKhoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaKhoa.setText("XÓA");
        btnXoaKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaKhoaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("CHUYÊN NGHÀNH");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Tên CN");

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnOut.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnOut.setText("ĐĂNG XUẤT");
        btnOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("SINH VIÊN");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Họ tên sinh viên");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Giới tính");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Ngày sinh");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Lớp");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Email");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setText("GPA");

        btnInsert.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnInsert.setText("THÊM");
        btnInsert.setToolTipText("");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setText("CẬP NHẬT");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setText("XÓA");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFind.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFind.setText("TÌM KIẾM");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(ResultTable);

        btnLop.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLop.setText("DANH SÁCH LỚP");
        btnLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLopActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Khoa");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setText("Chuyên nghành");

        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));

        btnLuuKhoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLuuKhoa.setText("LƯU");
        btnLuuKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuKhoaActionPerformed(evt);
            }
        });

        btnThemCN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemCN.setText("THÊM");
        btnThemCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCNActionPerformed(evt);
            }
        });

        btnXoaCN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaCN.setText("XÓA");
        btnXoaCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCNActionPerformed(evt);
            }
        });

        btnSuaCN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSuaCN.setText("SỬA");
        btnSuaCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCNActionPerformed(evt);
            }
        });

        btnLuuCN.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLuuCN.setText("LƯU");
        btnLuuCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuCNActionPerformed(evt);
            }
        });

        txtLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLopActionPerformed(evt);
            }
        });

        CbKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbKhoaActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setText("LƯU");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Hình ảnh");

        btnUpImage.setText("Browse...");
        btnUpImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpImageActionPerformed(evt);
            }
        });

        imageFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageFile.setText("image");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnXoaCN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnThemCN))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSuaCN, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnLuuCN, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(30, 30, 30))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSeparator4)
                                        .addComponent(jSeparator3)
                                        .addComponent(btnXemKhoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnXemCN, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                        .addComponent(BTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(101, 101, 101)
                                            .addComponent(jLabel4))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtTenKhoa))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(30, 30, 30)
                                            .addComponent(txtTenCN))
                                        .addComponent(btnLop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(26, 26, 26)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(btnThemKhoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnXoaKhoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(btnSuaKhoa)
                                                .addComponent(btnLuuKhoa))
                                            .addGap(22, 22, 22))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel3)
                        .addGap(56, 56, 56)))
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel15))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CbKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(getDate, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(80, 80, 80)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(173, 173, 173))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(23, 23, 23))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnInsert)
                                        .addGap(41, 41, 41)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addComponent(btnUpImage))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(btnUpdate)))
                                .addGap(64, 64, 64)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel16)
                            .addComponent(jLabel14)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnSave)
                                        .addGap(56, 56, 56))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(imageFile, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDelete)
                                    .addComponent(cbCN, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLop, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSex, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(239, 239, 239))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel2)
                                        .addGap(158, 158, 158)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11)
                                        .addGap(256, 256, 256)))
                                .addComponent(btnOut))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(247, 247, 247))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnXemKhoa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnXemCN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLop)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtTenKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnThemKhoa)
                                    .addComponent(btnSuaKhoa))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnXoaKhoa)
                                    .addComponent(btnLuuKhoa))
                                .addGap(7, 7, 7)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtTenCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnThemCN)
                                    .addComponent(btnSuaCN))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnXoaCN)
                                    .addComponent(btnLuuCN))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnOut)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFind))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel14)
                                            .addComponent(txtSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel16)
                                            .addComponent(txtLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel19)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9)
                                            .addComponent(CbKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel20)
                                            .addComponent(cbCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel13)
                                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15)
                                            .addComponent(getDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel18))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(btnUpImage)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(imageFile, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnInsert)
                                    .addComponent(btnSave)
                                    .addComponent(btnUpdate)
                                    .addComponent(btnDelete))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void xemDSKhoa() {
        DefaultTableModel dftb = new DefaultTableModel();
        ResultTable.setModel(dftb);
        dftb.addColumn("Mã Khoa");
        dftb.addColumn("Tên Khoa");
        TableColumnModel columnModel = ResultTable.getColumnModel();
        columnModel.getColumn(1).setPreferredWidth(600);
        try {
            KhoaDAO k = new KhoaDAO();
            rs = k.displayKhoa();
            while (rs.next()) {
                dftb.addRow(new Object[]{rs.getInt("MAKHOA"), rs.getString("TENKHOA")});
            }
            dftb.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi");
        }
    }
    private void btnXemKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemKhoaActionPerformed
        // TODO add your handling code here:
        xemDSKhoa();
    }//GEN-LAST:event_btnXemKhoaActionPerformed
    private void xemDSCN() {
        DefaultTableModel dftb = new DefaultTableModel();
        ResultTable.setModel(dftb);
        dftb.addColumn("Mã chuyên nghành");
        dftb.addColumn("Tên chuyên nghành");

        TableColumnModel columnModel = ResultTable.getColumnModel();
        columnModel.getColumn(1).setPreferredWidth(500);

        try {
            NghanhDAO n = new NghanhDAO();
            rs = n.displayNghanh();
            while (rs.next()) {
                dftb.addRow(new Object[]{rs.getInt("MACN"), rs.getString("TENCN")});
            }
            dftb.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi");
        }
    }
    private void btnXemCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemCNActionPerformed
        // TODO add your handling code here:
        xemDSCN();
    }//GEN-LAST:event_btnXemCNActionPerformed
    private void xemDSSV() {
        DefaultTableModel dftb = new DefaultTableModel();
        ResultTable.setModel(dftb);
        dftb.addColumn("Mã sinh viên");
        dftb.addColumn("Họ tên sinh viên");
        dftb.addColumn("Giới tính");
        dftb.addColumn("Ngày sinh");
        dftb.addColumn("Lớp");
        dftb.addColumn("Tên Chuyên ngành");
        dftb.addColumn("Tên khoa");
        dftb.addColumn("Email");
        dftb.addColumn("GPA");
        dftb.addColumn("Ảnh");

        TableColumnModel columnModel = ResultTable.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(9);
        
        try {
            SinhVienDAO sv = new SinhVienDAO();
            rs = sv.displaySinhVien();
            
            while (rs.next()) {
                dftb.addRow(new Object[]{rs.getString("MASV"), rs.getString("HOTEN"), 
                    rs.getString("GIOITINH"), rs.getString("NGAYSINH"), rs.getString("LOP"),
                    rs.getString("TENCN"), rs.getString("TENKHOA"), rs.getString("EMAIL"), 
                    rs.getDouble("GPA"),rs.getString("HINHANH")});
            }
            dftb.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi");
        }
    }
    private void BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNActionPerformed
        // TODO add your handling code here:
        xemDSSV();
    }//GEN-LAST:event_BTNActionPerformed
    private void xemDSL() {
        DefaultTableModel dftb = new DefaultTableModel();
        ResultTable.setModel(dftb);
        dftb.addColumn("Lớp");
        dftb.addColumn("Tên chuyên nghành");
        dftb.addColumn("Tên khoa");

        TableColumnModel columnModel = ResultTable.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(3);
        
        try {
            //ResultSet rss = st.executeQuery(sql);
            SinhVienDAO sv = new SinhVienDAO();
            rs = sv.displayLop();
            while (rs.next()) {
                dftb.addRow(new Object[]{rs.getString("LOP"), rs.getString("TENCN"), rs.getString("TENKHOA") });
            }
            dftb.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi");
        }
    }
    private void btnLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLopActionPerformed
        // TODO add your handling code here:
        xemDSL();
    }//GEN-LAST:event_btnLopActionPerformed
    private void addKhoaToComboBox() {
        try {
            String sqlAddItem = "select TENKHOA from KHOA";
            ResultSet rs = st.executeQuery(sqlAddItem);
            CbKhoa.removeAllItems();
            while (rs.next()) {
                String tenKhoa = rs.getString("TENKHOA");
                CbKhoa.addItem(tenKhoa);
            } 
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, "Không có khoa");
        }
    }
    private void btnThemKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKhoaActionPerformed
        // TODO add your handling code here:
        Khoa khoa = new Khoa(txtTenKhoa.getText());
        KhoaDAO add = new KhoaDAO();
        int result = add.addKhoa(khoa);
        if (result == 1) {
            JOptionPane.showMessageDialog(null, "Thêm thành công");
            /////////insert the row have just added
            DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
            // Get the index of the last row in the table
            int lastIndex = dftb.getRowCount() - 1;
            // Add the new row to the table
            dftb.addRow(new Object[]{lastIndex + 1, txtTenKhoa.getText()});
            // Notify the table that the data has changed
            dftb.fireTableDataChanged();
            ////////
            addKhoaToComboBox();
            txtTenKhoa.setText("");
        } else if (result == -1) {
            JOptionPane.showMessageDialog(null, "Thêm thất bại");
        } else if (result == -2) {
            JOptionPane.showMessageDialog(null, "Không thể thêm do trường thông tin trống");
        } else if (result == -3) {
            JOptionPane.showMessageDialog(null, "Không thể thêm do bị trùng với khoa có sẵn");
        }
    }//GEN-LAST:event_btnThemKhoaActionPerformed

    private void btnSuaKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaKhoaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
        if (ResultTable.getSelectedRowCount() == 1) {
            int row = ResultTable.getSelectedRow();
            khoa.setMaKhoa((int) ResultTable.getValueAt(row, 0));
            khoa.setTenKhoa((String) ResultTable.getValueAt(row, 1));
            txtTenKhoa.setText(khoa.getTenKhoa());
        }
    }//GEN-LAST:event_btnSuaKhoaActionPerformed

    private void btnLuuKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuKhoaActionPerformed
        // TODO add your handling code here:
        khoa.setTenKhoa(txtTenKhoa.getText());
        KhoaDAO khoaDAO = new KhoaDAO();
        int result = khoaDAO.updateKhoa(khoa);
        if (result == 1) {
            JOptionPane.showMessageDialog(null, "Lưu thành công");
            ////////update the row have just edited
            DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
            // Find the row that matches the edited ckhoa
            int rowIndex = -1;
            for (int i = 0; i < dftb.getRowCount(); i++) {
                if (dftb.getValueAt(i, 0).equals(khoa.getMaKhoa())) {
                    rowIndex = i;
                    break;
                }
            }
            // Update the row in the table
            if (rowIndex != -1) {
                dftb.setValueAt(khoa.getTenKhoa(), rowIndex, 1);
            }
            // Notify the table that the data has changed
            dftb.fireTableRowsUpdated(rowIndex, rowIndex);
            ////////
            txtTenKhoa.setText("");
            addKhoaToComboBox();
        } else {
            JOptionPane.showMessageDialog(null, "Lưu thất bại");
        }
    }//GEN-LAST:event_btnLuuKhoaActionPerformed

    private void btnXoaKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKhoaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
        if (ResultTable.getSelectedRowCount() == 1) {
            int row = ResultTable.getSelectedRow();
            khoa.setMaKhoa((int) ResultTable.getValueAt(row, 0));
            KhoaDAO k = new KhoaDAO();
            int result = k.deleteKhoa(khoa);
            if (result == 1) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                ////////delete
                // Find the row that matches the deleted category
                int rowIndex = -1;
                for (int i = 0; i < dftb.getRowCount(); i++) {
                    if (dftb.getValueAt(i, 0).equals(khoa.getMaKhoa())) {
                        rowIndex = i;
                        break;
                    }
                }
                // Remove the row from the table
                if (rowIndex != -1) {
                    dftb.removeRow(rowIndex);
                }
                // Notify the table that the data has changed
                dftb.fireTableDataChanged();
                ////////
                addKhoaToComboBox();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");
            }
        } else {
            if (ResultTable.getSelectedRowCount() == 1) {
                JOptionPane.showMessageDialog(this, "Bảng trống");
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chỉ chọn 1 dòng để xóa");
            }
        }
    }//GEN-LAST:event_btnXoaKhoaActionPerformed
    private void addCNToComboBox() {
        try {
            String sqlAddItem = "select TENCN from NGHANH";
            ResultSet rss = st.executeQuery(sqlAddItem);
            cbCN.removeAllItems();
            while (rss.next()) {
                String tenCN = rss.getString("TENCN");
                cbCN.addItem(tenCN);
            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, "Không có khoa");
        }
    }
    private void btnThemCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCNActionPerformed
        // TODO add your handling code here:
        Nghanh n = new Nghanh(txtTenCN.getText());
        NghanhDAO add = new NghanhDAO();
        int result = add.addCN(n);
        if (result == 1) {
            JOptionPane.showMessageDialog(null, "Thêm thành công");
            xemDSCN();
            /////////insert the row have just added
            DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
            // Get the index of the last row in the table
            int lastIndex = dftb.getRowCount() - 1;
            // Add the new row to the table
            dftb.addRow(new Object[]{lastIndex + 1, txtTenCN.getText()});
            // Notify the table that the data has changed
            dftb.fireTableDataChanged();
            ////////
            addKhoaToComboBox();
            txtTenCN.setText("");
        } else if (result == -1) {
            JOptionPane.showMessageDialog(null, "Thêm thất bại");
        } else if (result == -2) {
            JOptionPane.showMessageDialog(null, "Không thể thêm do trường thông tin trống");
        } else if (result == -3) {
            JOptionPane.showMessageDialog(null, "Không thể thêm do bị trùng với khoa có sẵn");
        }
    }//GEN-LAST:event_btnThemCNActionPerformed

    private void btnSuaCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCNActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
        if (ResultTable.getSelectedRowCount() == 1) {
            int row = ResultTable.getSelectedRow();
            n.setMaCN((int) ResultTable.getValueAt(row, 0));
            n.setTenCN((String) ResultTable.getValueAt(row, 1));
            txtTenCN.setText(n.getTenCN());
        }
    }//GEN-LAST:event_btnSuaCNActionPerformed

    private void btnLuuCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuCNActionPerformed
        // TODO add your handling code here:
        n.setTenCN(txtTenCN.getText());
        NghanhDAO nDAO = new NghanhDAO();
        int result = nDAO.updateTenCN(n);
        if (result == 1) {
            JOptionPane.showMessageDialog(null, "Lưu thành công");
            xemDSCN();
            ////////update the row have just edited
            DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
            // Find the row that matches the edited ckhoa
            int rowIndex = -1;
            for (int i = 0; i < dftb.getRowCount(); i++) {
                if (dftb.getValueAt(i, 0).equals(n.getMaCN())) {
                    rowIndex = i;
                    break;
                }
            }
            // Update the row in the table
            if (rowIndex != -1) {
                dftb.setValueAt(n.getTenCN(), rowIndex, 1);
            }
            // Notify the table that the data has changed
            dftb.fireTableRowsUpdated(rowIndex, rowIndex);
            ////////
            txtTenCN.setText("");
            addCNToComboBox();
        } else {
            JOptionPane.showMessageDialog(null, "Lưu thất bại");
        }
    }//GEN-LAST:event_btnLuuCNActionPerformed

    private void btnXoaCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCNActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
        if (ResultTable.getSelectedRowCount() == 1) {
            int row = ResultTable.getSelectedRow();
            n.setMaCN((int) ResultTable.getValueAt(row, 0));
            NghanhDAO cn = new NghanhDAO();
            int result = cn.deleteTenCN(n);
            if (result == 1) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                xemDSCN();
                ////////delete
                // Find the row that matches the deleted category
                int rowIndex = -1;
                for (int i = 0; i < dftb.getRowCount(); i++) {
                    if (dftb.getValueAt(i, 0).equals(sv.getMaCN())) {
                        rowIndex = i;
                        break;
                    }
                }
                // Remove the row from the table
                if (rowIndex != -1) {
                    dftb.removeRow(rowIndex);
                }
                // Notify the table that the data has changed
                dftb.fireTableDataChanged();
                ////////
                addKhoaToComboBox();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");
            }
        } else {
            if (ResultTable.getSelectedRowCount() == 1) {
                JOptionPane.showMessageDialog(this, "Bảng trống");
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chỉ chọn 1 dòng để xóa");
            }
        }
    }//GEN-LAST:event_btnXoaCNActionPerformed

    Date ngaySinh;
    String ngaySinhStr;
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
        if (ResultTable.getSelectedRowCount() == 1) {
            int row = ResultTable.getSelectedRow();
            sv.setMaSV((String) ResultTable.getValueAt(row, 0));
            sv.setHoTen((String) ResultTable.getValueAt(row, 1));
            sv.setGioiTinh((String) ResultTable.getValueAt(row, 2));
            ngaySinhStr = (String) ResultTable.getValueAt(row, 3);
            sv.setLop((String) ResultTable.getValueAt(row, 4));
            sv.setTenCN((String) ResultTable.getValueAt(row, 5));
            sv.setTenKhoa((String) ResultTable.getValueAt(row, 6));
            sv.setEmail((String) ResultTable.getValueAt(row, 7));
            
            Object value = ResultTable.getValueAt(row, 8);
            if (value instanceof Double) {
                double gpaValue = (double) value;
                sv.setGPA(gpaValue);
            } else if (value instanceof String) {
                String gpaString = (String) value;
                sv.setGPA(Double.parseDouble(gpaString));
            } else {
                // Xử lý trường hợp kiểu dữ liệu không xác định
            }
            
            Object imageValue = ResultTable.getValueAt(row, 9);

            if (imageValue instanceof byte[]) {
 
                byte[] imageBytes = (byte[]) imageValue;
                ImageIcon imageIcon = new ImageIcon(imageBytes);
                Image scaledImage = imageIcon.getImage().getScaledInstance(imageFile.getWidth(), 
                        imageFile.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon scaledImageIcon = new ImageIcon(scaledImage);
                imageFile.setIcon(scaledImageIcon);
            } else {
                imageFile.setIcon(null); 
            }

            ngaySinh = null;
            try {
                ngaySinh = new SimpleDateFormat("yyyy-MM-dd").parse(ngaySinhStr);
                sv.setNgaySinh(ngaySinh);
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
            txtName.setText(sv.getHoTen());
            txtSex.setText(sv.getGioiTinh());
            getDate.setDate(sv.getNgaySinh());
            txtLop.setText(sv.getLop());
            cbCN.setSelectedItem(sv.getTenCN());
            CbKhoa.setSelectedItem(sv.getTenKhoa());
            txtEmail.setText(sv.getEmail());
            txtGPA.setText(Double.toString(sv.getGPA()));
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        getDate.getDateFormatString();
        String tenKhoa = (String) CbKhoa.getSelectedItem();
        sv.setTenKhoa((String) CbKhoa.getSelectedItem());
            
        sv.setHoTen(txtName.getText());
        sv.setGioiTinh(txtSex.getText());
        sv.setEmail(txtEmail.getText());
        sv.setLop(txtLop.getText());
        
        String gpaString = txtGPA.getText();
        double gpaValue = Double.parseDouble(gpaString);
        sv.setGPA(gpaValue);
        
        Icon hinhAnhIcon = imageFile.getIcon(); 
        if (hinhAnhIcon instanceof ImageIcon) {
            ImageIcon hinhAnhImageIcon = (ImageIcon) hinhAnhIcon;
            Image hinhAnhImage = hinhAnhImageIcon.getImage();
            ByteArrayOutputStream baos = new ByteArrayOutputStream();

            try {
                ImageIO.write((BufferedImage) hinhAnhImage, "png", baos);
                byte[] hinhAnhBytes = baos.toByteArray();
                InputStream inputStream = new ByteArrayInputStream(hinhAnhBytes);
                sv.setHinhAnh(inputStream);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        
        
        //get the ma khoa based on ten khoa
        int makhoa = -1; // default value if the search fails
        String tenkhoa = tenKhoa; // the name of the category you're searching for
        try {
            String sql = "SELECT MAKHOA, TENKHOA FROM KHOA";
            Statement stmt = cn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String ten = rs.getString("TENKHOA");
                if (ten.equals(tenkhoa)) {
                    makhoa = rs.getInt("MAKHOA");
                    break;
                }
            }
            rs.close(); // close the ResultSet object
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        ///set cn
        String tenCN = (String) cbCN.getSelectedItem();
        sv.setTenCN((String) cbCN.getSelectedItem());
        int maCN = -1; // default value if the search fails
        String tencn = tenCN; // the name of the category you're searching for
        try {
            Statement st = cn.createStatement();
            String sqlcn = "SELECT MACN, TENCN FROM NGHANH";
            ResultSet rs = st.executeQuery(sqlcn);
            while (rs.next()) {
                String ten = rs.getString("TENCN");
                if (ten.equals(tencn)) {
                    maCN = rs.getInt("MACN");
                    break;
                }
            }
            rs.close(); // close the ResultSet object
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        //
        String tenk = tenKhoa;
        sv.setTenKhoa(tenk);

        try {
            sv.setNgaySinh(getDate.getDate());
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, "Ngày không đúng định dạng");
        }
        if (sv.getHoTen().isEmpty()) {
            sv.setHoTen("Không có tên sinh viên");
        }
        if (sv.getLop() == null || sv.getLop().isEmpty() || sv.getLop().equals("null")) {
            sv.setLop("zero"); // Hoặc gán một giá trị hợp lệ khác
        }

        if (sv.getNgaySinh() == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày sinh");
        }

        if (sv.getEmail().isEmpty()) {
            sv.setEmail("Không có");
        }
        
        if (sv.getGPA() <= 0) {
            sv.setGPA(0.00);
        }
        
        InputStream hinhAnhInputStream = sv.getHinhAnh();
        if (hinhAnhInputStream != null) {
            try {
                BufferedImage bufferedImage = ImageIO.read(hinhAnhInputStream);
                hinhAnhIcon = new ImageIcon(bufferedImage.getScaledInstance(imageFile.getWidth(), 
                        imageFile.getHeight(), Image.SCALE_SMOOTH));
                imageFile.setIcon(hinhAnhIcon);
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            imageFile.setIcon(null); 
        }
        
        InputStream hinhAnhStream = sv.getHinhAnh();
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        byte[] buffer = new byte[1024];
        int bytesRead;
        try {
            while ((bytesRead = hinhAnhStream.read(buffer)) != -1) {
                baos.write(buffer, 0, bytesRead);
            }
        } catch (IOException ex) {
            Logger.getLogger(ManageStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
        byte[] hinhAnhBytes = baos.toByteArray();

        SinhVienDAO svDAO = new SinhVienDAO();
        int result = svDAO.addSinhVien(sv);
        if (result == 1) {
            xemDSSV();
            txtName.setText("");
            txtSex.setText("");
            txtLop.setText("");
            txtGPA.setText("");
            txtEmail.setText("");
            getDate.setDate(null);
            imageFile.setText(null);
            JOptionPane.showMessageDialog(null, "Thêm sinh viên thành công");
        } else if (result == -1) {
            JOptionPane.showMessageDialog(null, "Lỗi mất kết nối");
        } else if (result == -2) {
            JOptionPane.showMessageDialog(null, "Lỗi trống các trường thông tin sinh viên");
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void CbKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbKhoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbKhoaActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        sv.setHoTen(txtName.getText());
        sv.setGioiTinh(txtSex.getText());
        sv.setNgaySinh(getDate.getDate());
        sv.setLop(txtLop.getText());
        String tenKhoa = (String) CbKhoa.getSelectedItem();
        sv.setTenKhoa((String) CbKhoa.getSelectedItem());
        String tenCN = (String) cbCN.getSelectedItem();
        sv.setTenCN((String) cbCN.getSelectedItem());
        sv.setEmail(txtEmail.getText());
        String gpaString = txtGPA.getText();
        try {
            double gpaValue = Double.parseDouble(gpaString);
            sv.setGPA(gpaValue);
        } catch (NumberFormatException ex) {
            sv.setGPA(0.00);
        }
      
        SinhVienDAO svDAO = new SinhVienDAO();
        int result = svDAO.updateSinhVien(sv);
        if (result == 1) {
            JOptionPane.showMessageDialog(null, "Lưu sinh viên thành công");
            xemDSSV();
            txtName.setText("");
            txtSex.setText("");
            getDate.setDate(null);
            txtLop.setText("");
            txtTenCN.setText("");
            txtTenKhoa.setText("");
            txtEmail.setText("");
            txtGPA.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Lưu thất bại");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dftb = (DefaultTableModel) ResultTable.getModel();
        if (ResultTable.getSelectedRowCount() == 1) {
            int row = ResultTable.getSelectedRow();
            sv.setMaSV((String) ResultTable.getValueAt(row, 0));
            SinhVienDAO svDAO = new SinhVienDAO();
            int result = svDAO.deleteSinhVien(sv);
            if (result == 1) {
                //refresh
                xemDSSV();
                JOptionPane.showMessageDialog(null, "Xóa thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Xóa thất bại");
            }
        } else {
            if (ResultTable.getSelectedRowCount() == 1) {
                JOptionPane.showMessageDialog(this, "Bảng trống");
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chỉ chọn 1 dòng để xóa");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutActionPerformed
        this.dispose();
        Login loginFrame = new Login();
        loginFrame.setVisible(true);
    }//GEN-LAST:event_btnOutActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dftb = new DefaultTableModel();
        ResultTable.setModel(dftb);
        dftb.addColumn("MASV");
        dftb.addColumn("HOTEN");
        dftb.addColumn("GIOITINH");
        dftb.addColumn("NGAYSINH");
        dftb.addColumn("LOP");
        dftb.addColumn("TENCN");
        dftb.addColumn("TENKHOA");
        dftb.addColumn("EMAIL");
        dftb.addColumn("GPA");
        TableColumnModel columnModel = ResultTable.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(5);

        int id = Integer.parseInt(txtFind.getText());
        String sql = "select MASV, HOTEN, GIOITINH, NGAYSINH, LOP, TENCN, TENKHOA, EMAIL, GPA from SINHVIEN where MASV = ?";
        String name = (String) cbCN.getSelectedItem();
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                dftb.addRow(new Object[]{rs.getString("MASV"), rs.getString("HOTEN"),
                    rs.getString("GIOITINH"), rs.getString("NGAYSINH"), rs.getString("LOP"),
                    rs.getString("TENCN"), rs.getString("TENKHOA"), rs.getString("EMAIL"),
                    rs.getString("GPA")});
            }
            dftb.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi");
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void txtFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFindActionPerformed

    private void txtLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLopActionPerformed

    private void btnUpImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpImageActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue==JFileChooser.APPROVE_OPTION)
        {
            File file = fileChooser.getSelectedFile();
            String pathFile = file.getAbsolutePath();
            BufferedImage b;
            try {
                b = ImageIO.read(file);
                imageFile.setIcon(new ImageIcon(b));
            }catch (Exception e) {}
        }
    }//GEN-LAST:event_btnUpImageActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN;
    private javax.swing.JComboBox<String> CbKhoa;
    private javax.swing.JTable ResultTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLop;
    private javax.swing.JButton btnLuuCN;
    private javax.swing.JButton btnLuuKhoa;
    private javax.swing.JButton btnOut;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSuaCN;
    private javax.swing.JButton btnSuaKhoa;
    private javax.swing.JButton btnThemCN;
    private javax.swing.JButton btnThemKhoa;
    private javax.swing.JButton btnUpImage;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXemCN;
    private javax.swing.JButton btnXemKhoa;
    private javax.swing.JButton btnXoaCN;
    private javax.swing.JButton btnXoaKhoa;
    private javax.swing.JComboBox<String> cbCN;
    private com.toedter.calendar.JDateChooser getDate;
    private javax.swing.JLabel imageFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtGPA;
    private javax.swing.JTextField txtLop;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSex;
    private javax.swing.JTextField txtTenCN;
    private javax.swing.JTextField txtTenKhoa;
    // End of variables declaration//GEN-END:variables

}
